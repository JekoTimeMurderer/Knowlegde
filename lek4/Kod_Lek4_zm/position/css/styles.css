/*Существует несколько видов позиционирование*/



/*
position:static(стандартное позиционирование, оно изначально у всех елементов) ;
				 relative (Зачастую этот тип позиционирование используется
											именно для того, чтобы показать относительно чего
											выставлять внутренние абсолютные блоки)
				absolute(часто используемое, явное позиционирование, которое позволяет
							  		выставлять блоки не в потоке, а выбивать их из потока)	 	
				fixed (то же, что и absolute, но зафиксированное положение блока 
				относительно экрана браузера)	*/



/*Зададим явное позиционирование нашему box1 помня, что position 
используется вместе с указанием координат top/left/right 
т.е. по какой стороне выставлять наш блок
*/
*{
	margin: 0;
	padding:0;
}

/*
Также следует понимать как работает система координат в браузере:
вверхний левый угол: 0;0;
с лева на право: координата x (положительные значения);
с верхнего угла вниз: координата y (положительные значения);

В нашем случае мы указываем box1 cмещение по координате относительно 
текущего положение т.е. задаем ему позицию (по Y 30px, а по x 30px)*/

.parent{
	height: 100px;
	background: grey;
	width: 1200px;
	margin: 0 auto;
	position: relative;
	padding: 50px;
	 /*Зачастую этот тип позиционирование используется
											именно для того, чтобы показать относительно чего
											выставлять внутренние абсолютные блоки	
*/
}

/*Если мы уберем высоту, то увидим, что background не задается.
Это происходить потому, что у box1 задано свойство absolute, которое
выбивает блок из потока и окружающие елементы его не чувствуют т.е. parent 
его не ощущает,
и потому если мы убираем заданную нами высоту parent (height:100px), то 
его высота становится равной нулю
становится равной нулю. Чтобы увидеть это более четко, добивим в наш parent
абзац с текстом и зададим box1 background;
Теперь мы видим наш box1 абсолютно спозиционированный и видим что p внутри
parenta не чувствует box1.
Дальше, когда мы укажем нашему parent ширину (width:1200px) и margin: 0 auto,
то увидим что наш абсолютно спозиционированный блок box1 ни куда не делся.
Это происходит потому, что абсолютно спозиционированный елемент позиционируеся
от первого родительского елемента у которого указано свойство position: relative;
Также если мы позиционируем елемент абсолютно, то он будет позиционироваться
относительно елемента, который а)relative б)елемента который тоже имеет свой-
ство абсолют г)либо он имеет position:fixed;, короче всех кроме статик.
Т.е. если мы хотим абсолютом выставить наш блок (в нашем случае box1), 
то для родителя ставим position:relative, чтобы этот абсолютный блок знал
от чего отсчитывать свои координаты, а он отсчитывает от первого родительского блока
у которого прописано явное позиционирование. Поскольку у parent ничего не прописано,
то отсчет идет относительно body, и если box1 задать координаты 0 0, то наш box1
будет в самом начале (относительно боди)
Пропишем для родителя box1 (parent) position:relative, и увидим, что теперь
наш абсолютный блок box1 относительно своего родителя - parent;


*/

.box1{
	position: absolute;
	top:30px;
	left: 30px;
	/*right: 30px;*/
	/*bottom: 30px;*/
	background: green;
	z-index: 2;
}						

/*Создадим еще box2, зададим ему также position:absolute, и видим, что box1 и
box2 спозиционированы абсолютно относительно родителя и накладываются друг
на друга. Это происходит потому, что box2 позже по css чем box1. Можно сменить
очередность (кто сверху) с помощью команды z-index. Чем больше z-index, тем 
выше приоритет блока т.е. он будет сверху. Размер абсолютного блока (аbsolute)
как и плавающего (float) зависит от контентаа
*/
.box2{
	position: absolute;
	top: 40px;
	left: 40px;
	background: yellow;
	z-index: 1;
}

																/*position: fixed*/

/*Если абсолютно спозиционированный блок ставится относительно родительского, то
fixed будет позиционироваться относительно окна браузера т.е. если мы увеличим
контент <p> и будет скролить его (контент), то наш зафиксированный блок будет
оставаться на том же месте т.е. будет зафиксирован относительно окна браузера
 (как кнопка ВКонтакте) .
 Можно добавить, что если добавить нашему parent (блоку, относительно которого
 	позиционируются наши абсолютные блоки) margin либо padding, то это никак
 не повлияет на них, какое место они занимали, такое и будут занимать
*/

.menu li{
	float: left;
	border: 1px solid #000;
	margin: 0 20px;
	list-style: none;
}

.menu{
	margin: 100px;
}

														/*position:relative*/
/*Также можно использоваться позиционированние position:relative. в нашем 
примере мы применили это позиционированние к лишке(li) class="menu" .active.
При этом мы задали координаты смещение лишки .active (топ 25 и леф 30) и 
увидели, что этот ли сместился относительно других на заданные координаты
(топ 25 и леф 30) и к тому он НЕ ВЫБИЛСЯ ИЗ ПОТОКА
(окружающие елементы его чувтсвуют). Также нужно знать, что
можно применить все координаты (top/left/right) кроме bottom. Также по 
рекомендациям змиюка лучше использовать margin вместо этого позиционарованния.*/


.active{
	position: relative;
	top: 25px;
	left: 30px;
}